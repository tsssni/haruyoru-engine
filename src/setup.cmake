message(processing sources ...)

file(GLOB srcs RELATIVE ${TSSSNI_SRC_DIR} ${TSSSNI_SRC_DIR}/*)

foreach (src ${srcs})
  if (IS_DIRECTORY "${TSSSNI_SRC_DIR}/${src}")
    message(build ${src}...)
    set(src-target tsssni.src.${src})

    file(GLOB files ${TSSSNI_SRC_DIR}/${src}/*.cpp)
    if (files)
      message(build ${src} as dynamic)
      add_library(${src-target} SHARED EXECLUDE_FROM_ALL files)
    else()
      message(build ${src} as header-only)
      add_library(${src-target} INTERFACE)
    endif()
    set_property(TARGET ${src-target} PROPERTY LIBRARY_OUTPUT_DIRECTORY ${TSSSNI_LIB_BUILD_DIR})
    target_include_directories(${src-target} SYSTEM INTERFACE ${TSSSNI_SRC_DIR})

    set(setup ${TSSSNI_SRC_DIR}/${src}/setup.cmake)
    if (EXISTS ${setup})
      include(${setup})
    endif()

    get_property(link-libs TARGET ${src-target} PROPERTY tsssni-link-libs)
    if (link-libs)
      add_library(${src-target}.lib INTERFACE)
      target_link_libraries(${src-target} INTERFACE ${src-target}.lib)
      foreach (lib ${link-libs})
        message("${src-target} link lib ${lib}")
        target_link_libraries(${src-target}.lib INTERFACE tsssni.lib.${lib})
      endforeach()
    endif()
  endif()
endforeach()

foreach (src ${srcs})
  if (IS_DIRECTORY ${TSSSNI_SRC_DIR}/${src})
    set(src-target tsssni.src.${src})

    get_property(link-srcs TARGET ${src-target} PROPERTY tsssni-link-srcs)
    if (link-srcs)
      add_library(${src-target}.src INTERFACE)
      target_link_libraries(${src-target} INTERFACE ${src-target}.src)
      foreach (src ${link-srcs})
        message(${src-target} link src ${src})
        target_link_libraries(${src-target}.src INTERFACE tsssni.src.${src})
      endforeach()
    endif()
  endif()
endforeach()
